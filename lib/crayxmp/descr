var w=8
var wa={w}
var p=8
var pa={p}
var s=2
var sa={s}
var l=8
var la={l}
var q=8
var qa={q}
var f=8
var fa={f}
var d=8
var da={d}
var x=8
var xa={x}

var NAME=crayxmp
var LIB=lib/{M}/tail_
var RT=lib/{M}/head_
var CPP_F=-D__cray -D__crayxmp
var INCLUDES=-I{EM}/include/_tail_mon
var C_LIB={EM}/{LIB}cc.1s {EM}/{LIB}cc.2g
var OLD_C_LIB={C_LIB}
var TEXTPATH={EM}/share/ack/cos/include/cal

name be
	from .m.g
	to .s
	program {EM}/lib.bin/{M}/ncg
	args <
	stdout
	need .e
end
name asopt
        from .s
        to .so
        program {EM}/lib/ack/{PLATFORM}/top
        args
        optimizer
        stdin
        stdout
end
name as
	from .s.so
	to .o
	program cal
	args -f -s -w -x -l 0 -i {SOURCE} -T {TEXTPATH} -t macros.s -o > <
	prep cond
end
name ldr
	from .o
	to .out
	program ldr
	args \
		({RTS}:.ocm.bas={EM}/{RT}cc) \
		({RTS}{ANSI?}:.c={EM}/{RT}cc) \
		({RTS}{ANSI?}:.cansi={EM}/{RT}ac) \
		({RTS}:.p={EM}/{RT}pc) \
		({RTS}:.mod={EM}/{RT}m2) \
		-o > < \
		(.p:{TAIL}={EM}/{LIB}pc) \
		(.bas:{TAIL}={EM}/{LIB}bc) \
		(.ocm:{TAIL}={EM}/{LIB}ocm) \
		(.mod:{TAIL}={EM}/{LIB}m2) \
		(.ocm.bas:{TAIL}={OLD_C_LIB}) \
		(.c:{TAIL}={C_LIB}) \
		(.mod.ocm.bas.c.p.e:{TAIL}={EM}/{LIB}mon) \
		(.e:{TAIL}={EM}/{LIB}em {EM}/{LIB}mon2 {EM}/lib/{M}/end_em)
	linker
end
